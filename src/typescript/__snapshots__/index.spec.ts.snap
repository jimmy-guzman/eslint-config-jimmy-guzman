// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`typescript should export typescript rules config 1`] = `
Object {
  "extends": Array [
    "prettier",
  ],
  "overrides": Array [
    Object {
      "files": Array [
        "**/*.ts?(x)",
      ],
      "parser": "@typescript-eslint/parser",
      "plugins": Array [
        "@typescript-eslint",
      ],
      "rules": Object {
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/array-type": "off",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-ts-comment": "error",
        "@typescript-eslint/ban-tslint-comment": "error",
        "@typescript-eslint/ban-types": "error",
        "@typescript-eslint/class-literal-property-style": "off",
        "@typescript-eslint/consistent-indexed-object-style": Array [
          "error",
          "record",
        ],
        "@typescript-eslint/consistent-type-assertions": "off",
        "@typescript-eslint/consistent-type-definitions": Array [
          "error",
          "interface",
        ],
        "@typescript-eslint/consistent-type-exports": "off",
        "@typescript-eslint/consistent-type-imports": "off",
        "@typescript-eslint/default-param-last": "error",
        "@typescript-eslint/dot-notation": "error",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-member-accessibility": "off",
        "@typescript-eslint/explicit-module-boundary-types": "error",
        "@typescript-eslint/init-declarations": "off",
        "@typescript-eslint/lines-between-class-members": "off",
        "@typescript-eslint/member-ordering": Array [
          "error",
          Object {
            "default": Object {
              "memberTypes": Array [
                "signature",
                "method",
                "constructor",
                "field",
              ],
              "order": "alphabetically",
            },
          },
        ],
        "@typescript-eslint/method-signature-style": Array [
          "error",
          "property",
        ],
        "@typescript-eslint/naming-convention": Array [
          "error",
          Object {
            "format": Array [
              "camelCase",
            ],
            "selector": "default",
          },
          Object {
            "format": Array [
              "camelCase",
              "PascalCase",
              "UPPER_CASE",
            ],
            "selector": "variable",
          },
          Object {
            "format": Array [
              "PascalCase",
            ],
            "prefix": Array [
              "is",
              "should",
              "has",
              "can",
              "did",
              "will",
            ],
            "selector": "variable",
            "types": Array [
              "boolean",
            ],
          },
          Object {
            "format": Array [
              "camelCase",
              "PascalCase",
            ],
            "selector": "function",
          },
          Object {
            "format": Array [
              "camelCase",
            ],
            "leadingUnderscore": "allow",
            "selector": "parameter",
          },
          Object {
            "format": Array [
              "PascalCase",
            ],
            "selector": "typeLike",
          },
          Object {
            "format": Array [
              "PascalCase",
              "UPPER_CASE",
            ],
            "selector": "enum",
          },
          Object {
            "format": Array [
              "PascalCase",
              "UPPER_CASE",
            ],
            "selector": "enumMember",
          },
          Object {
            "custom": Object {
              "match": false,
              "regex": "^I[A-Z]",
            },
            "format": Array [
              "PascalCase",
            ],
            "selector": "interface",
          },
          Object {
            "format": Array [
              "camelCase",
            ],
            "leadingUnderscore": "require",
            "modifiers": Array [
              "private",
            ],
            "selector": "memberLike",
          },
          Object {
            "format": null,
            "selector": "property",
          },
          Object {
            "format": Array [
              "camelCase",
              "PascalCase",
            ],
            "selector": "method",
          },
        ],
        "@typescript-eslint/no-array-constructor": "error",
        "@typescript-eslint/no-base-to-string": "warn",
        "@typescript-eslint/no-confusing-non-null-assertion": "off",
        "@typescript-eslint/no-confusing-void-expression": Array [
          "error",
          Object {
            "ignoreArrowShorthand": true,
            "ignoreVoidOperator": false,
          },
        ],
        "@typescript-eslint/no-dupe-class-members": "off",
        "@typescript-eslint/no-duplicate-imports": "error",
        "@typescript-eslint/no-dynamic-delete": "error",
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-extra-non-null-assertion": "error",
        "@typescript-eslint/no-extra-semi": "error",
        "@typescript-eslint/no-extraneous-class": "error",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-implicit-any-catch": "error",
        "@typescript-eslint/no-implied-eval": "error",
        "@typescript-eslint/no-inferrable-types": "error",
        "@typescript-eslint/no-invalid-this": "error",
        "@typescript-eslint/no-invalid-void-type": "warn",
        "@typescript-eslint/no-loop-func": "error",
        "@typescript-eslint/no-loss-of-precision": "error",
        "@typescript-eslint/no-magic-numbers": "off",
        "@typescript-eslint/no-meaningless-void-operator": "error",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-misused-promises": "warn",
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
        "@typescript-eslint/no-non-null-assertion": "warn",
        "@typescript-eslint/no-parameter-properties": "error",
        "@typescript-eslint/no-redeclare": "off",
        "@typescript-eslint/no-redundant-type-constituents": "error",
        "@typescript-eslint/no-require-imports": "off",
        "@typescript-eslint/no-restricted-imports": "off",
        "@typescript-eslint/no-shadow": "error",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-throw-literal": Array [
          "error",
          Object {
            "allowThrowingAny": true,
            "allowThrowingUnknown": true,
          },
        ],
        "@typescript-eslint/no-type-alias": "off",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/no-unnecessary-condition": "error",
        "@typescript-eslint/no-unnecessary-qualifier": "error",
        "@typescript-eslint/no-unnecessary-type-arguments": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/no-unnecessary-type-constraint": "error",
        "@typescript-eslint/no-unsafe-argument": "error",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/no-unused-vars": "warn",
        "@typescript-eslint/no-use-before-define": Array [
          "error",
          "nofunc",
        ],
        "@typescript-eslint/no-useless-constructor": "off",
        "@typescript-eslint/no-useless-empty-export": "error",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/non-nullable-type-assertion-style": "off",
        "@typescript-eslint/padding-line-between-statements": "off",
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/prefer-enum-initializers": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/prefer-includes": "error",
        "@typescript-eslint/prefer-literal-enum-member": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/prefer-nullish-coalescing": "error",
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/prefer-readonly-parameter-types": "off",
        "@typescript-eslint/prefer-reduce-type-parameter": "warn",
        "@typescript-eslint/prefer-regexp-exec": "error",
        "@typescript-eslint/prefer-return-this-type": "off",
        "@typescript-eslint/prefer-string-starts-ends-with": "error",
        "@typescript-eslint/prefer-ts-expect-error": "error",
        "@typescript-eslint/promise-function-async": "off",
        "@typescript-eslint/require-array-sort-compare": "off",
        "@typescript-eslint/require-await": "error",
        "@typescript-eslint/restrict-plus-operands": "off",
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/return-await": "error",
        "@typescript-eslint/sort-type-union-intersection-members": "error",
        "@typescript-eslint/space-before-blocks": "off",
        "@typescript-eslint/strict-boolean-expressions": "off",
        "@typescript-eslint/switch-exhaustiveness-check": "error",
        "@typescript-eslint/triple-slash-reference": "error",
        "@typescript-eslint/typedef": "off",
        "@typescript-eslint/unbound-method": "error",
        "@typescript-eslint/unified-signatures": "warn",
        "constructor-super": "off",
        "getter-return": "off",
        "import/no-duplicates": "off",
        "no-array-constructor": "off",
        "no-const-assign": "off",
        "no-dupe-args": "off",
        "no-dupe-class-members": "off",
        "no-dupe-keys": "off",
        "no-duplicate-imports": "off",
        "no-empty-function": "off",
        "no-extra-semi": "off",
        "no-func-assign": "off",
        "no-implied-eval": "off",
        "no-import-assign": "off",
        "no-loss-of-precision": "off",
        "no-new-symbol": "off",
        "no-obj-calls": "off",
        "no-redeclare": "off",
        "no-setter-return": "off",
        "no-shadow": "off",
        "no-this-before-super": "off",
        "no-undef": "off",
        "no-unreachable": "off",
        "no-unsafe-negation": "off",
        "no-unused-vars": "off",
        "no-var": "error",
        "prefer-const": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "require-await": "off",
        "valid-typeof": "off",
      },
      "settings": Object {
        "import/parsers": Object {
          "@typescript-eslint/parser": Array [
            ".ts",
            ".tsx",
            ".d.ts",
          ],
        },
      },
    },
  ],
}
`;
